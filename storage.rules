
rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {
    // Rules for event images
    // Path: /event-images/{eventId}/{filename}
    match /event-images/{allPaths=**} {
      // Authenticated users can read event images.
      allow read: if request.auth != null;

      // Organizer, coadmin, and admin roles can write (upload/update/delete) event images.
      // This rule checks if the user document exists in Firestore and if their role is one of the allowed roles.
      allow write: if request.auth != null &&
                     exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
                     (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['organizer', 'coadmin', 'admin']);
    }

    // Default deny all other paths if not explicitly allowed
    // It's important this is the last rule in this scope to act as a catch-all.
    match /{path=**} {
      allow read, write: if false;
    }
  }
}

    